---
interface Props {
  name: string;
  text: string;
  currentPage: string;
  icon?: keyof typeof images
}

// import { Debug } from 'astro:components';
import { Image } from 'astro:assets';
const { icon, name, text, currentPage } = Astro.props;

const images: {[key: string]: () => Promise<typeof import('*.png')>} = {
  'css': () => import('/src/assets/icon-css.png'),
  'html': () => import('/src/assets/icon-html.png'),
  'js': () => import('/src/assets/icon-js.png'),
}
const iconSrc: () => Promise<typeof import('*.png')> = images[icon || 'html'];
const link = '/' + (name === 'index' ? '' : name);
---
<div class:list={['menu-item', { active: currentPage === name }]}>
  <div class="menu-item-icon">
    <Image
      src={iconSrc()}
      alt=`${icon} icon`
      width="25"
    />
  </div>
  <div class='menu-item-text'>
    <a href={link}>{text}</a>
  </div>
</div>

<style lang="scss">
  .menu-item {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.5em;
    padding: 0.2em;

    &.active {
      background-color: #352f2f;
      border-radius: 0.5em;

      a {
        color: cyan;
        font-weight: bold;
      }
    }

    &-icon img {
      width: 25px;
      height: 25px;
    }

    &-text {
      font-family: 'Courier New', Courier, monospace;
    }

    @media screen and (max-width: 950px) {
      &-icon img {
        width: 20px;
        height: 20px;
      }

      &-text {
        font-size: 0.9em;
      }
    }

    @media screen and (max-width: 400px) {
      &-icon img {
        width: 16px;
        height: 16px;
      }

      &-text {
        font-size: 0.8em;
      }
    }

  }
</style>
